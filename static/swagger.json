{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Stability Backend Prototypes API",
    "description": "API documentation for the Stability Backend Prototypes."
  },
  "host": "localhost:5000",
  "basePath": "/",
  "schemes": ["http"],
  "paths": {
    "/leaderboard": {
      "get": {
        "summary": "Get leaderboard data",
        "description": "Retrieve leaderboard information.",
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "description": "Retrieve all users.",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Users" }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "description": "Add a new user to the system.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Users" },
            "description": "The user object to create"
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "schema": { "$ref": "#/definitions/Users" }
          },
          "400": {
            "description": "Invalid input or user already exists"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user profile",
        "description": "Retrieve a user's profile by their Discord ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Discord ID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": { "$ref": "#/definitions/Users" }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update user profile",
        "description": "Update a user's profile by their Discord ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Discord ID of the user"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/Users" }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": { "$ref": "#/definitions/Users" }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "description": "Delete a user by their Discord ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Discord ID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{id}/splits": {
      "get": {
        "summary": "Get user splits",
        "description": "Retrieve all splits associated with a user by their Discord ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Discord ID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/Splits" }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{id}/splits/total": {
      "get": {
        "summary": "Get total user splits",
        "description": "Retrieve the total split contribution for a user by their Discord ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Discord ID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": { "type": "string" }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/announcements": {
      "get": {
        "summary": "Get announcements",
        "description": "Retrieve all announcements.",
        "responses": {
          "200": {
            "description": "Successful response"
          }
        }
      },
      "post": {
        "summary": "Create an announcement",
        "description": "Add a new announcement.",
        "responses": {
          "201": {
            "description": "Announcement created successfully"
          }
        }
      }
    },
    "/webhooks": {
      "post": {
        "summary": "Handle webhook events",
        "description": "Process incoming webhook events.",
        "responses": {
          "200": {
            "description": "Webhook processed successfully"
          }
        }
      }
    },
    "/splits": {
      "post": {
        "summary": "Create a split",
        "description": "Add a new split to the system.",
        "responses": {
          "201": {
            "description": "Split created successfully"
          }
        }
      }
    }
  },
  "definitions": {
    "Users": {
      "type": "object",
      "properties": {
        "discord_id": { "type": "string" },
        "runescape_name": { "type": "string" },
        "rank": { "type": "string" },
        "progression_data": { "type": "object" },
        "previous_names": { "type": "array", "items": { "type": "string" } }
      }
    },
    "Leaderboard": {
      "type": "object",
      "properties": {
        "user_id": { "type": "string" },
        "diary_points": { "type": "integer" }
      }
    },
    "Announcements": {
      "type": "object",
      "properties": {
        "author_id": { "type": "string" },
        "message": { "type": "string" },
        "is_pinned": { "type": "boolean" }
      }
    },
    "Killcount": {
      "type": "object",
      "properties": {
        "user_id": { "type": "string" },
        "boss_name": { "type": "string" },
        "kill_count": { "type": "integer" },
        "personal_best": { "type": "string" },
        "scale": { "type": "integer" },
        "group": { "type": "object" }
      }
    },
    "Splits": {
      "type": "object",
      "properties": {
        "user_id": { "type": "string" },
        "item_name": { "type": "string" },
        "item_price": { "type": "number" },
        "split_contribution": { "type": "number" },
        "group_size": { "type": "integer" },
        "screenshot_link": { "type": "string" }
      }
    }
  }
}
